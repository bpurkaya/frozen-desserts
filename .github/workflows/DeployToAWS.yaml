name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.1

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --path vendor/bundle
        continue-on-error: false

      - name: Run specs
        run: bundle exec rspec

      - name: Set up SSH and deploy
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.EC2_INSTANCE_IP }}
          USER_NAME: ${{ secrets.EC2_USER }}
        
        run: |
          echo "Current working directory: $(pwd)"
          ls -lart
          
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

          # Give execute permissions to the deployment script
          cd /home/ubuntu/frozen-desserts && chmod +x deploy_script.sh

          # Run deployment script
          ./deploy_script.sh'





















































































































# name: Deploy to AWS

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     env:
#       AWS_DEFAULT_REGION: us-east-1
#       AWS_REGION: us-east-1
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}
#       EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: 3.2.1

#       - name: Install dependencies
#         run: |
#           gem install bundler
#           bundle install --path vendor/bundle
#         continue-on-error: false

#       - name: Run specs
#         run: bundle exec rspec

#       - name: Set up SSH and deploy
#         # run: |
#           # mkdir -p ~/.ssh
#           # echo "$EC2_SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
#           # chmod 600 ~/.ssh/deploy_key
#           # chmod 700 ~/.ssh

#           # # Get runner IP address
#           # IP_ADDRESS=$(curl -s https://api64.ipify.org?format=text)

#           # # Whitelist runner IP address in EC2 security group
#           # aws ec2 authorize-security-group-ingress \
#           #   --group-id $AWS_INSTANCE_SG_ID \
#           #   --protocol tcp \
#           #   --port 22 \
#           #   --cidr $IP_ADDRESS/32

#         env:
#             PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#             HOSTNAME: ${{secrets.EC2_INSTANCE_IP}}
#             USER_NAME: ${{secrets.EC2_USER}}
      
#         run: |
#           echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
#           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '  

#           # Give execute permissions to the deployment script
#           chmod +x deploy_script.sh

#           # Run deployment script
#           EC2_INSTANCE_IP="ec2-54-92-184-233.compute-1.amazonaws.com" ./deploy_script.sh

#       # - name: Revoke runner IP address from EC2 security group
#       #   run: |
#       #     aws ec2 revoke-security-group-ingress \
#       #       --group-id $AWS_INSTANCE_SG_ID \
#       #       --protocol tcp \
#       #       --port 22 \
#       #       --cidr $IP_ADDRESS/32

#       # - name: Update known_hosts
#       #   run: ssh-keyscan -H ec2-54-92-184-233.compute-1.amazonaws.com >> ~/.ssh/known_hosts

#       # - name: SSH into the server with StrictHostKeyChecking disabled
#       #   run: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T ec2-54-92-184-233.compute-1.amazonaws.com
